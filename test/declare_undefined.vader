Given javascript (defined variable):
  function blah () {
    const aaa = 1
    foo(aaa)
  }

Do:
  2j
  fa
  :VjsCreateDeclaration\<CR>

Expect javascript (nothing happens):
  function blah () {
    const aaa = 1
    foo(aaa)
  }

Given javascript (undefined variable):
  function blah () {
    foo(aaa)
  }

Do:
  j
  fa
  :VjsCreateDeclaration\<CR>

Expect javascript (inserts variable declaration):
  function blah () {
    const aaa = 

    foo(aaa)
  }

Given javascript (undefined function):
  function blah () {
    foo(aaa)
  }

Do:
  j
  ff
  :VjsCreateDeclaration\<CR>

Expect javascript (inserts function declaration):
  function foo() {
  }

  function blah () {
    foo(aaa)
  }

Given javascript (undefined async function):
  async function blah () {
    await foo(aaa)
  }

Do:
  j
  ff
  :VjsCreateDeclaration\<CR>

Expect javascript (inserts async function declaration):
  async function foo() {
  }

  async function blah () {
    await foo(aaa)
  }

Given javascript (undefined class):
  function blah () {
    new Stuff()
  }

Do:
  j
  fu
  :VjsCreateDeclaration\<CR>

Expect javascript (inserts class declaration):
  class Stuff {
  }

  function blah () {
    new Stuff()
  }

Given javascript (undefined class with constructor arguments):
  function blah () {
    const b = new Stuff({a: 2})
  }

Do:
  j
  fu
  :VjsCreateDeclaration\<CR>

Expect javascript (inserts class declaration with constructor):
  class Stuff {
    constructor() {
    }
  }

  function blah () {
    const b = new Stuff({a: 2})
  }

Given javascript (undefined class method):
  class Stuff {
    foo() {
      const bbb = this.getBbb()
    }
  }

Do:
  jj
  fB
  :VjsCreateDeclaration\<CR>

Expect javascript (inserts class method declaration):
  class Stuff {
    foo() {
      const bbb = this.getBbb()
    }

    getBbb() {
    }
  }

Given javascript (undefined async class method):
  class Stuff {
    async foo() {
      const bbb = await this.getBbb()
    }
  }

Do:
  jj
  fB
  :VjsCreateDeclaration\<CR>

Expect javascript (inserts async class method declaration):
  class Stuff {
    async foo() {
      const bbb = await this.getBbb()
    }

    async getBbb() {
    }
  }

Given javascript (undefined method - cursor is on `this`):
  class Stuff {
    foo() {
      const bbb = this.getBbb()
    }
  }

Do:
  jj
  fh
  :VjsCreateDeclaration\<CR>

Expect javascript (nothing happens):
  class Stuff {
    foo() {
      const bbb = this.getBbb()
    }
  }

Given javascript (undefined object method):
  const stuff = {
    foo() {
      const bbb = this.getBbb()
    }
  }

Do:
  jj
  fB
  :VjsCreateDeclaration\<CR>

Expect javascript (inserts object method declaration):
  const stuff = {
    getBbb() {
    },

    foo() {
      const bbb = this.getBbb()
    }
  }

Given javascript (undefined object method await):
  const stuff = {
    async foo() {
      const bbb = await  this. getBbb  ()
    }
  }

Do:
  jj
  fB
  :VjsCreateDeclaration\<CR>

Expect javascript (inserts object method declaration):
  const stuff = {
    async getBbb() {
    },

    async foo() {
      const bbb = await  this. getBbb  ()
    }
  }

Execute:
  call LogAllMessages()
