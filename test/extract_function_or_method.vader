Given javascript (void function):
  const a = 2

  function donc() {
    return 1
  }

  function getParentModuleName() {
    const caller = stack.shift()

    let path2 = caller.split(' ').pop()
    path2 = path2.replace(/^\(/, '')

    return path
  }

Do:
  9j
  Vj
  :'<,'>VjsExtractFunctionOrMethod\<CR>
  thing\<CR>

Expect:
  const a = 2

  function donc() {
    return 1
  }

  function thing(caller) {
    let path2 = caller.split(' ').pop()
    path2 = path2.replace(/^\(/, '')
  }

  function getParentModuleName() {
    const caller = stack.shift()

    thing(caller)

    return path
  }

Given javascript (class method):
  import {foo} from 'bar'

  class Aaa {
    stuff(aa) {
      const b = a
      const n = 2

      const c = this.aaa
      foo(work(c, b, n))

      return c + 3
    }
  }

  function asdf() {
    const x = 5
  }

  const d = 3

Do:
  7j
  Vj
  :'<,'>VjsExtractFunctionOrMethod\<CR>
  thing\<CR>

Expect:
  import {foo} from 'bar'

  class Aaa {
    thing(b, n) {
      const c = this.aaa
      foo(work(c, b, n))
      return c
    }

    stuff(aa) {
      const b = a
      const n = 2

      const c = this.thing(b, n)

      return c + 3
    }
  }

  function asdf() {
    const x = 5
  }

  const d = 3


Given javascript (object method):
  import {foo} from 'bar'

  const aaa = {
    stuff(aa) {
      const b = a
      const n = 2

      const c = this.aaa
      foo(work(c, b, n))

      return c + 3
    }
  }

  function asdf() {
    const x = 5
  }

  const d = 3

Do:
  7j
  Vj
  :'<,'>VjsExtractFunctionOrMethod\<CR>
  thing\<CR>

Expect:
  import {foo} from 'bar'

  const aaa = {
    thing(b, n) {
      const c = this.aaa
      foo(work(c, b, n))
      return c
    },

    stuff(aa) {
      const b = a
      const n = 2

      const c = this.thing(b, n)

      return c + 3
    }
  }

  function asdf() {
    const x = 5
  }

  const d = 3

" Execute:
"   call LogAllMessages()
